{"ast":null,"code":"var _jsxFileName = \"/Users/nikhileshjadhav/Desktop/React projects/cocktail-info/src/context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s=';\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(true);\n  const [serachTerm, setSearchTerm] = useState('a');\n  const [cocktails, SetCocktails] = useState([]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      serachTerm,\n      cocktails,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n};\n// make sure use\n_s(AppProvider, \"JnSnBN6CPa3SzvumVc+JX6TaeSg=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","loading","setLoading","serachTerm","setSearchTerm","cocktails","SetCocktails","useGlobalContext"],"sources":["/Users/nikhileshjadhav/Desktop/React projects/cocktail-info/src/context.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\n\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [loading, setLoading] = useState(true)\n  const [serachTerm, setSearchTerm] = useState('a')\n  const [cocktails, SetCocktails] = useState([])\n  return (\n  <AppContext.Provider value={{\n    loading, \n    serachTerm,\n    cocktails,\n    setSearchTerm,\n  }}>\n\n    {children}\n  </AppContext.Provider>\n  )\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,OAAO;AAAA;AAEnC,MAAMC,GAAG,GAAG,2DAA2D;AACvE,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAa,EAAE;AAExC,MAAMC,WAAW,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,oBACA,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAC1BS,OAAO;MACPE,UAAU;MACVE,SAAS;MACTD;IACF,CAAE;IAAA,UAECJ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAExB,CAAC;AACD;AAAA,GAhBMD,WAAW;AAAA,KAAXA,WAAW;AAiBjB,OAAO,MAAMQ,gBAAgB,GAAG,MAAM;EAAA;EACpC,OAAOd,UAAU,CAACI,UAAU,CAAC;AAC/B,CAAC;AAAA,IAFYU,gBAAgB;AAI7B,SAASV,UAAU,EAAEE,WAAW;AAAE;AAAA"},"metadata":{},"sourceType":"module"}